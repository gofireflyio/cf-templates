{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "KtoL",
            "Effect": "Allow",
            "Resource": "*",
            "Action": [
                "kafka:Describe*",
                "kafka:Get*",
                "kafka:List*",
                "kafkaconnect:Describe*",
                "kafkaconnect:List*",
                "kinesis:DescribeLimits",
                "kinesis:DescribeStream",
                "kinesis:DescribeStreamConsumer",
                "kinesis:ListShards",
                "kinesis:ListStreamConsumers",
                "kinesis:ListStreams",
                "kinesis:ListTagsForStream",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:DescribeApplicationVersion",
                "kinesisanalytics:ListApplicationVersions",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:ListTagsForResource",
                "kinesisvideo:DescribeSignalingChannel",
                "kinesisvideo:DescribeStream",
                "kinesisvideo:GetDataEndpoint",
                "kinesisvideo:GetIceServerConfig",
                "kinesisvideo:GetSignalingChannelEndpoint",
                "kinesisvideo:ListSignalingChannels",
                "kinesisvideo:ListStreams",
                "kinesisvideo:ListTagsForResource",
                "kinesisvideo:ListTagsForStream",
                "kms:DescribeCustomKeyStores",
                "kms:DescribeKey",
                "kms:GetKeyPolicy",
                "kms:GetPublicKey",
                "kms:ListAliases",
                "kms:ListKeyPolicies",
                "kms:ListKeys",
                "kms:ListResourceTags",
                "lakeformation:DescribeResource",
                "lakeformation:GetDataLakeSettings",
                "lakeformation:GetEffectivePermissionsForPath",
                "lakeformation:GetLFTag",
                "lakeformation:GetResourceLFTags",
                "lakeformation:ListDataCellsFilter",
                "lakeformation:ListLFTags",
                "lakeformation:ListPermissions",
                "lakeformation:ListResources",
                "lakeformation:ListTableStorageOptimizers",
                "lambda:Get*",
                "lambda:List*",
                "lex:DescribeBot",
                "lex:DescribeBotAlias",
                "lex:DescribeBotLocale",
                "lex:DescribeBotVersion",
                "lex:DescribeIntent",
                "lex:DescribeResourcePolicy",
                "lex:DescribeSlot",
                "lex:DescribeSlotType",
                "lex:GetBot",
                "lex:GetBotAlias",
                "lex:GetBotAliases",
                "lex:GetBotChannelAssociation",
                "lex:GetBotChannelAssociations",
                "lex:GetBotVersions",
                "lex:GetBots",
                "lex:GetBuiltinIntent",
                "lex:GetBuiltinIntents",
                "lex:GetBuiltinSlotTypes",
                "lex:GetIntent",
                "lex:GetIntentVersions",
                "lex:GetIntents",
                "lex:GetSlotType",
                "lex:GetSlotTypeVersions",
                "lex:GetSlotTypes",
                "lex:GetUtterancesView",
                "lex:ListAggregatedUtterances",
                "lex:ListBotAliases",
                "lex:ListBotLocales",
                "lex:ListBotRecommendations",
                "lex:ListBotVersions",
                "lex:ListBots",
                "lex:ListBuiltInIntents",
                "lex:ListBuiltInSlotTypes",
                "lex:ListExports",
                "lex:ListImports",
                "lex:ListIntents",
                "lex:ListRecommendedIntents",
                "lex:ListSlotTypes",
                "lex:ListSlots",
                "lex:ListTagsForResource",
                "license-manager:GetLicense",
                "license-manager:GetLicenseConfiguration",
                "license-manager:GetLicenseManagerReportGenerator",
                "license-manager:GetServiceSettings",
                "license-manager:ListAssociationsForLicenseConfiguration",
                "license-manager:ListFailuresForLicenseConfigurationOperations",
                "license-manager:ListLicenseConfigurations",
                "license-manager:ListLicenseManagerReportGenerators",
                "license-manager:ListLicenseSpecificationsForResource",
                "license-manager:ListLicenseVersions",
                "license-manager:ListLicenses",
                "license-manager:ListResourceInventory",
                "license-manager:ListTagsForResource",
                "lightsail:GetActiveNames",
                "lightsail:GetAlarms",
                "lightsail:GetAutoSnapshots",
                "lightsail:GetBlueprints",
                "lightsail:GetBucketAccessKeys",
                "lightsail:GetBucketBundles",
                "lightsail:GetBuckets",
                "lightsail:GetBundles",
                "lightsail:GetCertificates",
                "lightsail:GetContactMethods",
                "lightsail:GetDisk",
                "lightsail:GetDisks",
                "lightsail:GetDistributionBundles",
                "lightsail:GetDistributions",
                "lightsail:GetDomain",
                "lightsail:GetDomains",
                "lightsail:GetInstance",
                "lightsail:GetInstancePortStates",
                "lightsail:GetInstances",
                "lightsail:GetKeyPair",
                "lightsail:GetKeyPairs",
                "lightsail:GetLoadBalancer",
                "lightsail:GetLoadBalancerTlsCertificates",
                "lightsail:GetLoadBalancers",
                "lightsail:GetRegions",
                "lightsail:GetRelationalDatabase",
                "lightsail:GetRelationalDatabaseBlueprints",
                "lightsail:GetRelationalDatabaseBundles",
                "lightsail:GetRelationalDatabaseLogStreams",
                "lightsail:GetRelationalDatabaseMasterUserPassword",
                "lightsail:GetRelationalDatabaseParameters",
                "lightsail:GetRelationalDatabases",
                "lightsail:GetStaticIp",
                "lightsail:GetStaticIps",
                "logs:DescribeDestinations",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:DescribeMetricFilters",
                "logs:DescribeResourcePolicies",
                "logs:DescribeSubscriptionFilters",
                "logs:ListTagsLogGroup"
            ]
        }
    ]
}
