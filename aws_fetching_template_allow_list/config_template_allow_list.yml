AWSTemplateFormatVersion: 2010-09-09
Description: Firefly AWS Integration
Mappings:
  FireflyEnvironment:
    env:
      organizationID: "094724549126"
      SnsNameForConfirmCustomerDeployment: "handle-customer-actions"
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Parameters:
          - ExternalID
    ParameterLabels:
      ExternalID:
        default: ExternalID
Parameters:
  ExternalID:
    Description: >-
      The cross-account access role created by the stack will use this value for
      its ExternalID. Do not change this value!
    Type: String
    MinLength: '2'
    MaxLength: '1224'
    AllowedPattern: '[\w+=,.@:\/-]*'
    ConstraintDescription: 'Invalid ExternalID value.  Must match pattern [\w+=,.@:\/-]*'
Conditions: { }
Resources:
  FireflyS3SpecificReadPermission:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'kms:Decrypt'
            Resource:
              - !Join [ ':', [ 'arn:aws:kms:*', !Ref 'AWS::AccountId', 'key/*' ] ]
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
              - 'arn:aws:s3:::*/*.tfstate'
              - 'arn:aws:s3:::elasticbeanstalk-*/*'
              - !Join [ '/', [ !Join [ '-', [ 'arn:aws:s3:::aws-emr-resources', !Ref 'AWS::AccountId', '*' ] ], '*' ] ]
  FireflyReadonlyPolicyPart1:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: [
              "access-analyzer:GetAnalyzer",
              "access-analyzer:List*",
              "account:GetAlternateContact",
              "account:List*",
              "acm:DescribeCertificate",
              "acm:List*",
              "airflow:GetEnvironment",
              "airflow:List*",
              "amplify:GetApp",
              "amplify:GetBackendEnvironment",
              "amplify:GetBranch",
              "amplify:GetDomainAssociation",
              "amplify:GetWebHook",
              "amplify:List*",
              "apigateway:GET",
              "app-integrations:List*",
              "appconfig:GetApplication",
              "appconfig:GetConfigurationProfile",
              "appconfig:GetDeployment",
              "appconfig:GetDeploymentStrategy",
              "appconfig:GetEnvironment",
              "appconfig:GetHostedConfigurationVersion",
              "appconfig:List*",
              "appflow:Describe*",
              "appflow:List*",
              "application-autoscaling:Describe*",
              "appmesh:Describe*",
              "appmesh:List*",
              "apprunner:Describe*",
              "apprunner:List*",
              "appstream:Describe*",
              "appstream:List*",
              "appsync:GetApiAssociation",
              "appsync:GetApiCache",
              "appsync:GetDataSource",
              "appsync:GetDomainName",
              "appsync:GetFunction",
              "appsync:GetGraphqlApi",
              "appsync:GetResolver",
              "appsync:GetSchemaCreationStatus",
              "appsync:List*",
              "aps:Describe*",
              "aps:List*",
              "athena:GetDatabase",
              "athena:GetNamedQuery",
              "athena:GetWorkGroup",
              "athena:ListDatabases",
              "athena:ListEngineVersions",
              "athena:ListNamedQueries",
              "athena:ListTagsForResource",
              "athena:ListWorkGroups",
              "autoscaling-plans:Describe*",
              "autoscaling:Describe*",
              "backup-gateway:List*",
              "backup:Describe*",
              "backup:GetBackupPlan",
              "backup:GetBackupSelection",
              "backup:GetBackupVaultAccessPolicy",
              "backup:GetBackupVaultNotifications",
              "backup:List*",
              "batch:Describe*",
              "batch:List*",
              "budgets:Describe*",
              "chime:GetVoiceConnector",
              "chime:GetVoiceConnectorGroup",
              "chime:GetVoiceConnectorLoggingConfiguration",
              "chime:GetVoiceConnectorOrigination",
              "chime:GetVoiceConnectorStreamingConfiguration",
              "chime:GetVoiceConnectorTermination",
              "chime:ListTagsForResource",
              "chime:ListVoiceConnector*",
              "cloud9:Describe*",
              "cloud9:List*",
              "cloudformation:Describe*",
              "cloudformation:GetResource",
              "cloudformation:GetResourceRequestStatus",
              "cloudformation:GetTemplate",
              "cloudformation:List*",
              "cloudfront:Describe*",
              "cloudfront:GetCachePolicy",
              "cloudfront:GetCloudFrontOriginAccessIdentity",
              "cloudfront:GetDistribution",
              "cloudfront:GetFieldLevelEncryptionConfig",
              "cloudfront:GetFieldLevelEncryptionProfile",
              "cloudfront:GetFunction",
              "cloudfront:GetKeyGroup",
              "cloudfront:GetMonitoringSubscription",
              "cloudfront:GetOriginRequestPolicy",
              "cloudfront:GetPublicKey",
              "cloudfront:GetRealtimeLogConfig",
              "cloudfront:GetResponseHeadersPolicy",
              "cloudfront:List*",
              "cloudhsm:Describe*",
              "cloudhsm:List*",
              "cloudsearch:Describe*",
              "cloudsearch:List*",
              "cloudtrail:Describe*",
              "cloudtrail:GetEventDataStore",
              "cloudtrail:GetEventSelectors",
              "cloudtrail:GetInsightSelectors",
              "cloudtrail:GetTrailStatus",
              "cloudtrail:List*",
              "cloudwatch:DescribeAlarms",
              "codeartifact:Describe*",
              "codeartifact:GetDomainPermissionsPolicy",
              "codeartifact:GetRepositoryPermissionsPolicy",
              "codeartifact:List*",
              "codebuild:Describe*",
              "codebuild:GetResourcePolicy",
              "codebuild:List*",
              "codecommit:Describe*",
              "codecommit:GetApprovalRuleTemplate",
              "codecommit:GetRepository",
              "codecommit:GetRepositoryTriggers",
              "codecommit:List*",
              "codedeploy:List*",
              "codeguru-profiler:DescribeProfilingGroup",
              "codeguru-profiler:List*",
              "codeguru-reviewer:Describe*",
              "codeguru-reviewer:List*",
              "codepipeline:GetPipeline",
              "codepipeline:List*",
              "codestar-connections:GetConnection",
              "codestar-connections:GetHost",
              "codestar-connections:List*",
              "codestar-notifications:Describe*",
              "codestar-notifications:List*",
              "codestar:Describe*",
              "codestar:List*",
              "cognito-identity:Describe*",
              "cognito-identity:GetIdentityPoolRoles",
              "cognito-identity:GetPrincipalTagAttributeMap",
              "cognito-identity:List*",
              "cognito-idp:Describe*",
              "cognito-idp:List*",
              "cognito-sync:Describe*",
              "cognito-sync:List*"
            ]
            Resource:
              - '*'
  FireflyReadonlyPolicyPart2:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: [
              "comprehend:Describe*",
              "comprehend:List*",
              "comprehendmedical:Describe*",
              "comprehendmedical:List*",
              "compute-optimizer:Describe*",
              "config:Describe*",
              "config:GetOrganizationConfigRuleDetailedStatus",
              "config:GetOrganizationConformancePackDetailedStatus",
              "config:List*",
              "connect:Describe*",
              "connect:List*",
              "cur:DescribeReportDefinitions",
              "databrew:Describe*",
              "databrew:List*",
              "dataexchange:GetDataSet",
              "dataexchange:GetRevision",
              "dataexchange:List*",
              "datapipeline:Describe*",
              "datapipeline:GetPipelineDefinition",
              "datapipeline:List*",
              "datasync:Describe*",
              "datasync:List*",
              "dax:Describe*",
              "dax:List*",
              "detective:List*",
              "devicefarm:GetDevicePool",
              "devicefarm:GetInstanceProfile",
              "devicefarm:GetNetworkProfile",
              "devicefarm:GetProject",
              "devicefarm:GetTestGridProject",
              "devicefarm:GetUpload",
              "devicefarm:List*",
              "devops-guru:Describe*",
              "devops-guru:List*",
              "directconnect:Describe*",
              "directconnect:List*",
              "discovery:Describe*",
              "discovery:List*",
              "dlm:GetLifecyclePolicies",
              "dlm:GetLifecyclePolicy",
              "dlm:List*",
              "dms:Describe*",
              "dms:List*",
              "ds:DescribeClientAuthenticationSettings",
              "ds:DescribeConditionalForwarders",
              "ds:DescribeDirectories",
              "ds:DescribeDomainControllers",
              "ds:DescribeEventTopics",
              "ds:DescribeLDAPSSettings",
              "ds:DescribeRegions",
              "ds:DescribeSharedDirectories",
              "ds:DescribeSnapshots",
              "ds:DescribeTrusts",
              "ds:ListIpRoutes",
              "ds:ListLogSubscriptions",
              "ds:ListSchemaExtensions",
              "ds:ListTagsForResource",
              "dynamodb:DescribeBackup",
              "dynamodb:DescribeContinuousBackups",
              "dynamodb:DescribeContributorInsights",
              "dynamodb:DescribeExport",
              "dynamodb:DescribeGlobalTable",
              "dynamodb:DescribeGlobalTableSettings",
              "dynamodb:DescribeKinesisStreamingDestination",
              "dynamodb:DescribeLimits",
              "dynamodb:DescribeStream",
              "dynamodb:DescribeTable",
              "dynamodb:DescribeTableReplicaAutoScaling",
              "dynamodb:DescribeTimeToLive",
              "dynamodb:ListBackups",
              "dynamodb:ListContributorInsights",
              "dynamodb:ListExports",
              "dynamodb:ListGlobalTables",
              "dynamodb:ListStreams",
              "dynamodb:ListTables",
              "dynamodb:ListTagsOfResource",
              "ebs:ListChangedBlocks",
              "ebs:ListSnapshotBlocks",
              "ec2:Describe*",
              "ec2:GetEbsDefaultKmsKeyId",
              "ec2:GetEbsEncryptionByDefault",
              "ec2:GetIpamPoolAllocations",
              "ec2:GetIpamPoolCidrs",
              "ec2:GetPasswordData",
              "ec2:GetSerialConsoleAccessStatus",
              "ec2:GetSubnetCidrReservations",
              "ec2:GetTransitGatewayRouteTableAssociations",
              "ec2:ListSnapshotsInRecycleBin",
              "ecr-public:DescribeImageTags",
              "ecr-public:DescribeImages",
              "ecr-public:DescribeRegistries",
              "ecr-public:DescribeRepositories",
              "ecr-public:GetRepositoryCatalogData",
              "ecr-public:GetRepositoryPolicy",
              "ecr-public:ListTagsForResource",
              "ecr:DescribeImageReplicationStatus",
              "ecr:DescribeImageScanFindings",
              "ecr:DescribeImages",
              "ecr:DescribePullThroughCacheRules",
              "ecr:DescribeRegistry",
              "ecr:DescribeRepositories",
              "ecr:GetLifecyclePolicy",
              "ecr:GetRegistryPolicy",
              "ecr:GetRegistryScanningConfiguration",
              "ecr:GetRepositoryPolicy",
              "ecr:ListImages",
              "ecr:ListTagsForResource",
              "ecs:DescribeCapacityProviders",
              "ecs:DescribeClusters",
              "ecs:DescribeContainerInstances",
              "ecs:DescribeServices",
              "ecs:DescribeTaskDefinition",
              "ecs:DescribeTaskSets",
              "ecs:DescribeTasks",
              "ecs:ListAccountSettings",
              "ecs:ListAttributes",
              "ecs:ListClusters",
              "ecs:ListContainerInstances",
              "ecs:ListServices",
              "ecs:ListTagsForResource",
              "ecs:ListTaskDefinitionFamilies",
              "ecs:ListTaskDefinitions",
              "ecs:ListTasks",
              "eks:DescribeAddon",
              "eks:DescribeAddonVersions",
              "eks:DescribeCluster",
              "eks:DescribeFargateProfile",
              "eks:DescribeIdentityProviderConfig",
              "eks:DescribeNodegroup",
              "eks:DescribeUpdate",
              "eks:ListAddons",
              "eks:ListClusters",
              "eks:ListFargateProfiles",
              "eks:ListIdentityProviderConfigs",
              "eks:ListNodegroups",
              "eks:ListTagsForResource",
              "eks:ListUpdates",
            ]
            Resource:
              - '*'
  FireflyReadonlyPolicyPart3:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: [
              "elastic-inference:DescribeAcceleratorOfferings",
              "elastic-inference:DescribeAcceleratorTypes",
              "elastic-inference:DescribeAccelerators",
              "elastic-inference:ListTagsForResource",
              "elasticache:Describe*",
              "elasticache:List*",
              "elasticbeanstalk:Describe*",
              "elasticbeanstalk:List*",
              "elasticfilesystem:Describe*",
              "elasticfilesystem:List*",
              "elasticloadbalancing:Describe*",
              "elasticmapreduce:DescribeCluster",
              "elasticmapreduce:DescribeJobFlows",
              "elasticmapreduce:DescribeNotebookExecution",
              "elasticmapreduce:DescribeReleaseLabel",
              "elasticmapreduce:DescribeSecurityConfiguration",
              "elasticmapreduce:DescribeStep",
              "elasticmapreduce:DescribeStudio",
              "elasticmapreduce:GetAutoTerminationPolicy",
              "elasticmapreduce:GetManagedScalingPolicy",
              "elasticmapreduce:GetStudioSessionMapping",
              "elasticmapreduce:ListBootstrapActions",
              "elasticmapreduce:ListClusters",
              "elasticmapreduce:ListInstanceFleets",
              "elasticmapreduce:ListInstanceGroups",
              "elasticmapreduce:ListInstances",
              "elasticmapreduce:ListNotebookExecutions",
              "elasticmapreduce:ListReleaseLabels",
              "elasticmapreduce:ListSecurityConfigurations",
              "elasticmapreduce:ListSteps",
              "elasticmapreduce:ListStudioSessionMappings",
              "elasticmapreduce:ListStudios",
              "elastictranscoder:ListPipelines",
              "elastictranscoder:ListPresets",
              "emr-containers:DescribeManagedEndpoint",
              "emr-containers:DescribeVirtualCluster",
              "emr-containers:ListManagedEndpoints",
              "emr-containers:ListTagsForResource",
              "emr-containers:ListVirtualClusters",
              "es:DescribeDomain",
              "es:DescribeDomainAutoTunes",
              "es:DescribeDomainConfig",
              "es:DescribeDomains",
              "es:DescribeElasticsearchDomain",
              "es:DescribeElasticsearchDomainConfig",
              "es:DescribeElasticsearchDomains",
              "es:DescribeElasticsearchInstanceTypeLimits",
              "es:DescribeInstanceTypeLimits",
              "es:DescribePackages",
              "es:DescribeReservedElasticsearchInstanceOfferings",
              "es:DescribeReservedElasticsearchInstances",
              "es:DescribeReservedInstanceOfferings",
              "es:DescribeReservedInstances",
              "es:GetCompatibleVersions",
              "es:ListDomainNames",
              "es:ListDomainsForPackage",
              "es:ListElasticsearchInstanceTypes",
              "es:ListElasticsearchVersions",
              "es:ListInstanceTypeDetails",
              "es:ListPackagesForDomain",
              "es:ListTags",
              "es:ListVersions",
              "events:Describe*",
              "events:List*",
              "evidently:List*",
              "finspace:ListEnvironments",
              "finspace:ListTagsForResource",
              "firehose:DescribeDeliveryStream",
              "firehose:ListDeliveryStreams",
              "firehose:ListTagsForDeliveryStream",
              "fms:GetAdminAccount",
              "fms:GetPolicy",
              "fms:List*",
              "fsx:Describe*",
              "fsx:List*",
              "gamelift:Describe*",
              "gamelift:List*",
              "glacier:DescribeVault",
              "glacier:GetVaultAccessPolicy",
              "glacier:GetVaultLock",
              "glacier:GetVaultNotifications",
              "glacier:ListMultipartUploads",
              "glacier:ListParts",
              "glacier:ListProvisionedCapacity",
              "glacier:ListTagsForVault",
              "glacier:ListVaults",
              "globalaccelerator:Describe*",
              "globalaccelerator:List*",
              "glue:GetClassifier",
              "glue:GetConnection",
              "glue:GetCrawler",
              "glue:GetDataCatalogEncryptionSettings",
              "glue:GetDatabase",
              "glue:GetDevEndpoint",
              "glue:GetJob",
              "glue:GetMLTransform",
              "glue:GetPartition",
              "glue:GetRegistry",
              "glue:GetResourcePolicy",
              "glue:GetSchema",
              "glue:GetSchemaVersion",
              "glue:GetSecurityConfiguration",
              "glue:GetSecurityConfigurations",
              "glue:GetTable",
              "glue:GetTags",
              "glue:GetTrigger",
              "glue:GetUserDefinedFunction",
              "glue:GetWorkflow",
              "glue:ListBlueprints",
              "glue:ListCrawlers",
              "glue:ListDevEndpoints",
              "glue:ListJobs",
              "glue:ListMLTransforms",
              "glue:ListRegistries",
              "glue:ListSchemaVersions",
              "glue:ListSchemas",
              "glue:ListTriggers",
              "glue:ListWorkflows",
              "grafana:DescribeWorkspace",
              "grafana:DescribeWorkspaceAuthentication",
              "grafana:ListPermissions",
              "grafana:ListWorkspaces",
              "guardduty:DescribeOrganizationConfiguration",
              "guardduty:DescribePublishingDestination",
              "guardduty:GetDetector",
              "guardduty:GetFilter",
              "guardduty:GetIPSet",
              "guardduty:GetMasterAccount",
              "guardduty:GetMembers",
              "guardduty:GetThreatIntelSet",
              "guardduty:ListDetectors",
              "guardduty:ListFilters",
              "guardduty:ListFindings",
              "guardduty:ListIPSets",
              "guardduty:ListInvitations",
              "guardduty:ListMembers",
              "guardduty:ListOrganizationAdminAccounts",
              "guardduty:ListPublishingDestinations",
              "guardduty:ListTagsForResource",
              "guardduty:ListThreatIntelSets",
            ]
            Resource:
              - '*'
  FireflyReadonlyPolicyPart4:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: [
              "iam:GetAccountPasswordPolicy",
              "iam:GetGroup",
              "iam:GetGroupPolicy",
              "iam:GetInstanceProfile",
              "iam:GetLoginProfile",
              "iam:GetOpenIDConnectProvider",
              "iam:GetPolicy",
              "iam:GetPolicyVersion",
              "iam:GetRole",
              "iam:GetRolePolicy",
              "iam:GetSAMLProvider",
              "iam:GetSSHPublicKey",
              "iam:GetServerCertificate",
              "iam:GetUser",
              "iam:GetUserPolicy",
              "iam:ListAccessKeys",
              "iam:ListAccountAliases",
              "iam:ListEntitiesForPolicy",
              "iam:ListGroupPolicies",
              "iam:ListGroups",
              "iam:ListGroupsForUser",
              "iam:ListInstanceProfileTags",
              "iam:ListInstanceProfiles",
              "iam:ListInstanceProfilesForRole",
              "iam:ListOpenIDConnectProviderTags",
              "iam:ListOpenIDConnectProviders",
              "iam:ListPolicies",
              "iam:ListPolicyTags",
              "iam:ListPolicyVersions",
              "iam:ListRolePolicies",
              "iam:ListRoleTags",
              "iam:ListRoles",
              "iam:ListSAMLProviderTags",
              "iam:ListSAMLProviders",
              "iam:ListSSHPublicKeys",
              "iam:ListServerCertificateTags",
              "iam:ListServerCertificates",
              "iam:ListServiceSpecificCredentials",
              "iam:ListSigningCertificates",
              "iam:ListUserPolicies",
              "iam:ListUserTags",
              "iam:ListUsers",
              "iam:ListVirtualMFADevices",
              "identitystore:DescribeGroup",
              "identitystore:DescribeUser",
              "identitystore:ListGroups",
              "identitystore:ListUsers",
              "imagebuilder:GetComponent",
              "imagebuilder:GetContainerRecipe",
              "imagebuilder:GetDistributionConfiguration",
              "imagebuilder:GetImage",
              "imagebuilder:GetImagePipeline",
              "imagebuilder:GetImageRecipe",
              "imagebuilder:GetInfrastructureConfiguration",
              "imagebuilder:List*",
              "inspector2:DescribeOrganizationConfiguration",
              "inspector2:ListAccountPermissions",
              "inspector2:ListDelegatedAdminAccounts",
              "inspector2:ListFilters",
              "inspector2:ListMembers",
              "inspector2:ListTagsForResource",
              "inspector:DescribeAssessmentTargets",
              "inspector:DescribeAssessmentTemplates",
              "inspector:DescribeCrossAccountAccessRole",
              "inspector:DescribeExclusions",
              "inspector:DescribeResourceGroups",
              "inspector:DescribeRulesPackages",
              "inspector:ListAssessmentTargets",
              "inspector:ListAssessmentTemplates",
              "inspector:ListEventSubscriptions",
              "inspector:ListExclusions",
              "inspector:ListRulesPackages",
              "inspector:ListTagsForResource",
              "kafka:Describe*",
              "kafka:GetBootstrapBrokers",
              "kafka:List*",
              "kafkaconnect:Describe*",
              "kafkaconnect:List*",
              "kinesis:DescribeLimits",
              "kinesis:DescribeStream",
              "kinesis:DescribeStreamConsumer",
              "kinesis:ListShards",
              "kinesis:ListStreamConsumers",
              "kinesis:ListStreams",
              "kinesis:ListTagsForStream",
              "kinesisanalytics:DescribeApplication",
              "kinesisanalytics:DescribeApplicationVersion",
              "kinesisanalytics:ListApplicationVersions",
              "kinesisanalytics:ListApplications",
              "kinesisanalytics:ListTagsForResource",
              "kinesisvideo:DescribeSignalingChannel",
              "kinesisvideo:DescribeStream",
              "kinesisvideo:ListSignalingChannels",
              "kinesisvideo:ListStreams",
              "kinesisvideo:ListTagsForResource",
              "kinesisvideo:ListTagsForStream",
              "kms:DescribeCustomKeyStores",
              "kms:DescribeKey",
              "kms:GetKeyPolicy",
              "kms:GetPublicKey",
              "kms:ListAliases",
              "kms:ListKeyPolicies",
              "kms:ListKeys",
              "kms:ListResourceTags",
              "lakeformation:DescribeResource",
              "lakeformation:GetDataLakeSettings",
              "lakeformation:ListDataCellsFilter",
              "lakeformation:ListLFTags",
              "lakeformation:ListPermissions",
              "lakeformation:ListResources",
              "lakeformation:ListTableStorageOptimizers",
              "lambda:GetAlias",
              "lambda:GetCodeSigningConfig",
              "lambda:GetEventSourceMapping",
              "lambda:GetFunction",
              "lambda:GetFunctionCodeSigningConfig",
              "lambda:GetFunctionEventInvokeConfig",
              "lambda:GetLayerVersion",
              "lambda:GetLayerVersionPolicy",
              "lambda:GetPolicy",
              "lambda:GetProvisionedConcurrencyConfig",
              "lambda:List*",
              "lex:DescribeBot",
              "lex:DescribeBotAlias",
              "lex:DescribeBotLocale",
              "lex:DescribeBotVersion",
              "lex:DescribeIntent",
              "lex:DescribeResourcePolicy",
              "lex:DescribeSlot",
              "lex:DescribeSlotType",
              "lex:GetBot",
              "lex:ListAggregatedUtterances",
              "lex:ListBotAliases",
              "lex:ListBotLocales",
              "lex:ListBotRecommendations",
              "lex:ListBotVersions",
              "lex:ListBots",
              "lex:ListBuiltInIntents",
              "lex:ListBuiltInSlotTypes",
              "lex:ListExports",
              "lex:ListImports",
              "lex:ListIntents",
              "lex:ListRecommendedIntents",
              "lex:ListSlotTypes",
              "lex:ListSlots",
              "lex:ListTagsForResource",
            ]
            Resource:
              - '*'
  FireflyReadonlyPolicyPart5:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: [
              "license-manager:GetLicenseConfiguration",
              "license-manager:ListAssociationsForLicenseConfiguration",
              "license-manager:ListFailuresForLicenseConfigurationOperations",
              "license-manager:ListLicenseConfigurations",
              "license-manager:ListLicenseManagerReportGenerators",
              "license-manager:ListLicenseSpecificationsForResource",
              "license-manager:ListLicenseVersions",
              "license-manager:ListLicenses",
              "license-manager:ListResourceInventory",
              "license-manager:ListTagsForResource",
              "lightsail:GetDomain",
              "lightsail:GetInstance",
              "lightsail:GetInstancePortStates",
              "lightsail:GetInstances",
              "lightsail:GetKeyPair",
              "lightsail:GetStaticIp",
              "lightsail:GetStaticIps",
              "logs:DescribeDestinations",
              "logs:DescribeLogGroups",
              "logs:DescribeLogStreams",
              "logs:DescribeMetricFilters",
              "logs:DescribeResourcePolicies",
              "logs:DescribeSubscriptionFilters",
              "logs:ListTagsLogGroup",
              "machinelearning:Describe*",
              "macie2:DescribeBuckets",
              "macie2:DescribeClassificationJob",
              "macie2:DescribeOrganizationConfiguration",
              "macie2:GetAdministratorAccount",
              "macie2:GetCustomDataIdentifier",
              "macie2:GetFindingsFilter",
              "macie2:GetMember",
              "macie2:ListClassificationJobs",
              "macie2:ListCustomDataIdentifiers",
              "macie2:ListFindingsFilters",
              "macie2:ListInvitations",
              "macie2:ListManagedDataIdentifiers",
              "macie2:ListMembers",
              "macie2:ListOrganizationAdminAccounts",
              "macie2:ListTagsForResource",
              "macie:ListMemberAccounts",
              "macie:ListS3Resources",
              "managedblockchain:ListInvitations",
              "managedblockchain:ListMembers",
              "managedblockchain:ListNetworks",
              "managedblockchain:ListNodes",
              "managedblockchain:ListTagsForResource",
              "mediaconvert:GetQueue",
              "mediaconvert:ListQueues",
              "mediaconvert:ListTagsForResource",
              "mediapackage:DescribeChannel",
              "mediapackage:DescribeOriginEndpoint",
              "mediapackage:ListChannels",
              "mediapackage:ListOriginEndpoints",
              "mediapackage:ListTagsForResource",
              "mediastore:DescribeContainer",
              "mediastore:GetContainerPolicy",
              "mediastore:ListContainers",
              "mediastore:ListTagsForResource",
              "memorydb:DescribeACLs",
              "memorydb:DescribeClusters",
              "memorydb:DescribeEngineVersions",
              "memorydb:DescribeEvents",
              "memorydb:DescribeParameterGroups",
              "memorydb:DescribeServiceUpdates",
              "memorydb:DescribeSnapshots",
              "memorydb:DescribeSubnetGroups",
              "memorydb:DescribeUsers",
              "memorydb:ListTags",
              "mobilehub:DescribeBundle",
              "mobilehub:ListBundles",
              "mobilehub:ListProjects",
              "mobiletargeting:GetAdmChannel",
              "mobiletargeting:GetApnsChannel",
              "mobiletargeting:GetApnsSandboxChannel",
              "mobiletargeting:GetApnsVoipChannel",
              "mobiletargeting:GetApnsVoipSandboxChannel",
              "mobiletargeting:GetApp",
              "mobiletargeting:GetApplicationSettings",
              "mobiletargeting:GetApps",
              "mobiletargeting:GetBaiduChannel",
              "mobiletargeting:GetEmailChannel",
              "mobiletargeting:GetEventStream",
              "mobiletargeting:GetGcmChannel",
              "mobiletargeting:GetSmsChannel",
              "mobiletargeting:List*",
              "mq:Describe*",
              "mq:List*",
              "network-firewall:Describe*",
              "network-firewall:List*",
              "networkmanager:Describe*",
              "networkmanager:List*",
              "opsworks-cm:Describe*",
              "opsworks-cm:List*",
              "opsworks:Describe*",
              "opsworks:List*",
              "organizations:Describe*",
              "organizations:List*",
              "outposts:GetOutpostInstanceTypes",
              "outposts:List*",
              "panorama:Describe*",
              "panorama:List*",
              "pi:Describe*",
              "polly:DescribeVoices",
              "polly:List*",
              "profile:List*",
              "proton:List*",
              "qldb:Describe*",
              "qldb:List*",
              "quicksight:Describe*",
              "quicksight:List*",
              "ram:GetResourceShareAssociations",
              "ram:GetResourceShareInvitations",
              "ram:GetResourceShares",
              "ram:List*",
              "rbin:List*",
              "rds:Describe*",
              "rds:List*",
              "redshift-data:Describe*",
              "redshift-data:List*",
              "redshift:Describe*",
              "refactor-spaces:List*",
              "rekognition:Describe*",
              "rekognition:List*",
              "resiliencehub:Describe*",
              "resiliencehub:List*",
              "resource-groups:GetGroup",
              "resource-groups:GetGroupQuery",
              "resource-groups:GetTags",
              "resource-groups:List*",
              "robomaker:Describe*",
              "robomaker:List*",
              "route53-recovery-control-config:Describe*",
              "route53-recovery-control-config:List*",
              "route53-recovery-readiness:GetCell",
              "route53-recovery-readiness:GetReadinessCheck",
              "route53-recovery-readiness:GetRecoveryGroup",
              "route53-recovery-readiness:GetResourceSet",
            ]
            Resource:
              - '*'
  FireflyReadonlyPolicyPart6:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: [
              "route53-recovery-readiness:List*",
              "route53:GetChange",
              "route53:GetDNSSEC",
              "route53:GetHealthCheck",
              "route53:GetHostedZone",
              "route53:GetReusableDelegationSet",
              "route53:GetTrafficPolicy",
              "route53:GetTrafficPolicyInstance",
              "route53:List*",
              "route53domains:GetDomainDetail",
              "route53domains:GetOperationDetail",
              "route53domains:List*",
              "route53resolver:GetFirewallDomainList",
              "route53resolver:GetFirewallRuleGroup",
              "route53resolver:GetFirewallRuleGroupAssociation",
              "route53resolver:GetResolverEndpoint",
              "route53resolver:GetResolverQueryLogConfig",
              "route53resolver:GetResolverQueryLogConfigAssociation",
              "route53resolver:GetResolverRule",
              "route53resolver:GetResolverRuleAssociation",
              "route53resolver:List*",
              "s3-outposts:List*",
              "s3:Describe*",
              "s3:GetAccelerateConfiguration",
              "s3:GetAccessPointConfigurationForObjectLambda",
              "s3:GetAccessPointPolicyForObjectLambda",
              "s3:GetAccessPointPolicyStatus",
              "s3:GetAccessPointPolicyStatusForObjectLambda",
              "s3:GetAccountPublicAccessBlock",
              "s3:GetAnalyticsConfiguration",
              "s3:GetBucketAcl",
              "s3:GetBucketCORS",
              "s3:GetBucketLocation",
              "s3:GetBucketLogging",
              "s3:GetBucketNotification",
              "s3:GetBucketObjectLockConfiguration",
              "s3:GetBucketOwnershipControls",
              "s3:GetBucketPolicy",
              "s3:GetBucketPublicAccessBlock",
              "s3:GetBucketRequestPayment",
              "s3:GetBucketTagging",
              "s3:GetBucketVersioning",
              "s3:GetBucketWebsite",
              "s3:GetEncryptionConfiguration",
              "s3:GetIntelligentTieringConfiguration",
              "s3:GetInventoryConfiguration",
              "s3:GetLifecycleConfiguration",
              "s3:GetMetricsConfiguration",
              "s3:GetMultiRegionAccessPoint",
              "s3:GetMultiRegionAccessPointPolicy",
              "s3:GetObjectTagging",
              "s3:GetObjectVersion",
              "s3:GetReplicationConfiguration",
              "s3:List*",
              "sagemaker:Describe*",
              "sagemaker:GetModelPackageGroupPolicy",
              "sagemaker:List*",
              "savingsplans:Describe*",
              "savingsplans:ListTagsForResource",
              "schemas:Describe*",
              "schemas:List*",
              "sdb:ListDomains",
              "secretsmanager:DescribeSecret",
              "secretsmanager:GetResourcePolicy",
              "secretsmanager:List*",
              "securityhub:Describe*",
              "securityhub:GetEnabledStandards",
              "securityhub:GetFindingAggregator",
              "securityhub:GetInsights",
              "securityhub:GetMasterAccount",
              "securityhub:GetMembers",
              "securityhub:List*",
              "serverlessrepo:List*",
              "servicecatalog:Describe*",
              "servicecatalog:GetAWSOrganizationsAccessStatus",
              "servicecatalog:List*",
              "servicediscovery:GetInstance",
              "servicediscovery:GetNamespace",
              "servicediscovery:GetOperation",
              "servicediscovery:GetService",
              "servicediscovery:List*",
              "servicequotas:GetAWSDefaultServiceQuota",
              "servicequotas:GetRequestedServiceQuotaChange",
              "servicequotas:GetServiceQuota",
              "servicequotas:List*",
              "ses:Describe*",
              "ses:GetIdentityDkimAttributes",
              "ses:GetIdentityMailFromDomainAttributes",
              "ses:GetIdentityNotificationAttributes",
              "ses:GetIdentityPolicies",
              "ses:GetIdentityVerificationAttributes",
              "ses:GetTemplate",
              "ses:List*",
              "shield:Describe*",
              "shield:List*",
              "signer:Describe*",
              "signer:GetSigningProfile",
              "signer:List*",
              "sms-voice:List*",
              "sms:List*",
              "snow-device-management:Describe*",
              "snow-device-management:List*",
              "snowball:Describe*",
              "snowball:List*",
              "sns:GetPlatformApplicationAttributes",
              "sns:GetSMSAttributes",
              "sns:GetSubscriptionAttributes",
              "sns:GetTopicAttributes",
              "sns:List*",
              "sqs:GetQueueAttributes",
              "sqs:GetQueueUrl",
              "sqs:List*",
              "ssm-contacts:Describe*",
              "ssm-contacts:List*",
              "ssm-incidents:List*",
              "ssm:Describe*",
              "ssm:GetDocument",
              "ssm:GetMaintenanceWindow",
              "ssm:GetMaintenanceWindowTask",
              "ssm:GetParameter",
              "ssm:GetPatchBaseline",
              "ssm:List*",
              "sso:Describe*",
              "sso:GetInlinePolicyForPermissionSet",
              "sso:GetSharedSsoConfiguration",
              "sso:List*",
              "states:Describe*",
              "states:List*",
              "storagegateway:Describe*",
              "storagegateway:List*",
              "swf:Describe*",
              "swf:List*",
              "synthetics:Describe*",
              "synthetics:GetCanary",
              "synthetics:List*",
              "timestream:Describe*",
              "timestream:List*"
            ]
            Resource:
              - '*'
  FireflyReadonlyPolicyPart7:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: [
              "transcribe:Describe*",
              "transcribe:List*",
              "transfer:Describe*",
              "transfer:List*",
              "translate:Describe*",
              "translate:List*",
              "voiceid:Describe*",
              "voiceid:List*",
              "waf-regional:GetByteMatchSet",
              "waf-regional:GetGeoMatchSet",
              "waf-regional:GetIPSet",
              "waf-regional:GetLoggingConfiguration",
              "waf-regional:GetRateBasedRule",
              "waf-regional:GetRegexMatchSet",
              "waf-regional:GetRegexPatternSet",
              "waf-regional:GetRule",
              "waf-regional:GetRuleGroup",
              "waf-regional:GetSizeConstraintSet",
              "waf-regional:GetSqlInjectionMatchSet",
              "waf-regional:GetWebACL",
              "waf-regional:GetWebACLForResource",
              "waf-regional:GetXssMatchSet",
              "waf-regional:List*",
              "waf:GetByteMatchSet",
              "waf:GetGeoMatchSet",
              "waf:GetIPSet",
              "waf:GetLoggingConfiguration",
              "waf:GetRateBasedRule",
              "waf:GetRegexMatchSet",
              "waf:GetRegexPatternSet",
              "waf:GetRule",
              "waf:GetRuleGroup",
              "waf:GetSizeConstraintSet",
              "waf:GetSqlInjectionMatchSet",
              "waf:GetWebACL",
              "waf:GetXssMatchSet",
              "waf:List*",
              "wafv2:Describe*",
              "wafv2:GetIPSet",
              "wafv2:GetLoggingConfiguration",
              "wafv2:GetRegexPatternSet",
              "wafv2:GetRuleGroup",
              "wafv2:GetWebACL",
              "wafv2:GetWebACLForResource",
              "wafv2:List*",
              "wisdom:List*",
              "worklink:DescribeA*",
              "worklink:List*",
              "workmail:Describe*",
              "workmail:List*",
              "xray:GetEncryptionConfig",
              "xray:GetGroup",
              "xray:GetSamplingRules",
              "xray:List*",
              "cloudwatch:ListMetricStreams",
              "cloudwatch:ListDashboards"
            ]
            Resource:
              - '*'
  FireflyCrossAccountAccessRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'firefly-caa-role'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !FindInMap
                    - FireflyEnvironment
                    - env
                    - organizationID
                  - ':root'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalID
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/SecurityAudit'
        - 'arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess'
        - !Ref FireflyS3SpecificReadPermission
        - !Ref FireflyReadonlyPolicyPart1
        - !Ref FireflyReadonlyPolicyPart2
        - !Ref FireflyReadonlyPolicyPart3
        - !Ref FireflyReadonlyPolicyPart4
        - !Ref FireflyReadonlyPolicyPart5
        - !Ref FireflyReadonlyPolicyPart6
        - !Ref FireflyReadonlyPolicyPart7
Outputs:
  RoleARN:
    Description: >-
      Cross-account access role ARN to share with Firefly
      integration
    Value: !GetAtt
      - FireflyCrossAccountAccessRole
      - Arn
  ExternalID:
    Description: ExternalID to share with Firefly
    Value: !Ref ExternalID
  TemplateVersion:
    Description: gofirefly.io template version
    Value: 1.0.0
